
# Initial Travic-CI control file. 6.11.15 jhrg
# Added sonar scan 3.12.19 jhrg 

dist: trusty

# Use the docker container-based build systems
sudo: false

language: java

services:
    - docker
    
# whitelist
branches:
  only:
    - master
    - travis

notifications:
  email:
    - ndp@opendap.org
    - jgallagher@opendap.org

addons:
  # ssh_known_hosts: www.opendap.org
  apt:
    packages:
      - awscli
      - sshpass

env:
  global:
    # SONAR_LOGIN, made using "travis encrypt --org -r OPENDAP/olfs SONAR_LOGIN=335df..."
    - secure: "GW672d33rdWG40v8ve25p909qnejhqWGzoX7+IEflv9hMZ+8vDWArtFaxuILhu/QeJlLJgMCrNyWdhgpSuyEJS8/EQlOUXWZfZaSPBVriayd7OKLY5D35PKODFPXbZpJ1GOheMz3roQkg+IjQzgey/zOGu4KQB9FjtcqllFvy38="
    # AWS_ACCESS_KEY_ID for the user 'travis-olfs'
    - secure: "N7FWlKcHNC4VRaNZFz/8WQlwJXjr7t4QLklJPiUY2xBw8n4lpYUuMjvDlwX7YupIKNGw8ama8GauNZhJ2h0qv08VeMF4VLOc5yUDt9BSEEnomiQZWa8N0paaSknlZP8Qq7YH2WVrlASIR+/Owdig1mqIv9GPW+ZkwdRTdRI9FZM="
    # AWS_SECRET_ACCESS_KEY
    - secure: "c70Fjj9nsL085GJlSToG6hxfuKI2uPEI4bXVggtJ7jfO6PdA1UFDq0FiqUwm14Nzi81YEjXmlF2PznieZAlzi7wh6Xa2H8xxwdx5jJCnp8wqMkNpFMk3SkdJHMCciHqMlxI1toa9JgJ/+PVPgynfBn2b0a/Ivrl0TBIkKoWoFes="
    # GIT_UID for travis-ci-opendap
    - secure: "jnuhhkxj0UlQLZSObVEi5xi0dAHObLy6S6f4hhCLKsI0nDgdL8Xj212ZubI4mlRSOgCmfbBNSSz20WgH11D7fuvPQQVyN6MMbh9OrE6JT1NEnA+Rzl+1tjWYTTBCkw1fQjchCg6fR+5Poyq4zfXOaG3H8DBZfrSGFTTdC2BdcWs="
    # GIT_PSWD for travis-ci-opendap
    - secure: "KDP1zPlruadQIbkvXHWHx6rLcTJ3P7AK2Io7IBnAiW3QETDxVksThXKY2Hey25fXw8+UV0nXuQ4v4gMNmghjvCU1k3N/vkIk9AUDC19z1IM282GumvJjZ+6WdHGvMn1sRPi3Jt3ymHoLAHiUnMbJcdc6xtAUlDCq7x2fb99sUFc="
    # WOO_UID for travis
    - secure: "jXqnDaiGjCUUAc4r865NkgbXCPfqRxrfWP+lKtAG7Lc/U6sTQBIJww1bsvfizFOdiEAgAzk4OAgE4z6djf7WbhHzyQKxGIieyLWUXoKhzAKjRYwidmKp6gBWOZSvcxURcYF2SpRAuKASpv/9lvZ3bNOlHu9LYQJ7r49AmCXJ98o="

stages:
- name: build
  if:  branch = master
- name: test
  if:  branch = master
- name: scan
  if:  branch = master AND NOT type = pull_request
- name: snappah
  if:  branch = master AND NOT type = pull_request

jobs:
  include:
    - stage: build
      script: export STAGE=build
      jdk: openjdk7
      script: ant server -DHYRAX_VERSION=CI-Build -DOLFS_VERSION=CI-Build
    - jdk: openjdk8
      script: ant server -DHYRAX_VERSION=CI-Build -DOLFS_VERSION=CI-Build

    - stage: test
      script: export STAGE=test
      jdk: openjdk7
      script: ant check
    - jdk: openjdk8
      script: ant check
    
    - stage: scan
      addons: 
        sonarcloud:
      # jdk 7 does not work with sonar scan. jhrg 3/14/19
      jdk: openjdk8
      script:
        - ant server -DHYRAX_VERSION=CI-Build -DOLFS_VERSION=CI-Build 
        - ant sonar -Dsonar.login=$SONAR_LOGIN
        - export STAGE=scan
        - echo $STAGE

    - stage: snappah
      jdk: openjdk8
      script:
        - export STAGE=snappah
        - echo $STAGE
        - export snap_tag="snapshot-"`date +%s`;
        - ant -DHYRAX_VERSION=${snap_tag} -DOLFS_VERSION=${snap_tag} -DOLFS_DIST_BASE=olfs-snapshot DISTRO
        - test -d $TRAVIS_BUILD_DIR/package || mkdir $TRAVIS_BUILD_DIR/package
        - cp ./build/dist/*.tgz $TRAVIS_BUILD_DIR/package/;    
        - echo "Checking ${TRAVIS_BUILD_DIR}/package/"     
        - ls -l ${TRAVIS_BUILD_DIR}/package/
        
    - stage: snappah
      jdk: openjdk8
      script:
        - export STAGE=snappah
        - echo $STAGE
        - export snap_tag="snapshot-"`date +%s`;
        - ant -DHYRAX_VERSION=${snap_tag} -DOLFS_VERSION=${snap_tag} -DOLFS_DIST_BASE=olfs-snapshot ngap-dist
        - test -d $TRAVIS_BUILD_DIR/package || mkdir $TRAVIS_BUILD_DIR/package
        - cp ./build/dist/*.tgz $TRAVIS_BUILD_DIR/package/;
        - echo "Checking ${TRAVIS_BUILD_DIR}/package/"
        - ls -l ${TRAVIS_BUILD_DIR}/package/


# before_deploy:
#
# Get creds for pushing snapshots to w.o.o.
#- if  test "$STAGE" = "snappah";
#    then
#        ls -l ./travis;
#        openssl aes-256-cbc -K $encrypted_fa37b851f33a_key -iv $encrypted_fa37b851f33a_iv -in ./travis/woo_deploy_rsa_enc -out /tmp/woo_deploy_rsa -d;
#        eval "$(ssh-agent -s)";
#        chmod 600 /tmp/woo_deploy_rsa;
#        ssh-add /tmp/woo_deploy_rsa;
#    fi

# The deploy section copies the snapshot build product our S3 bucket
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: opendap.travis.build
    skip_cleanup: true
    local_dir: $TRAVIS_BUILD_DIR/package
    on:
      branch: master
      condition: $STAGE =~ ^snappah$


  # Push snapshot files to w.o.o
  # - provider: script
  #  skip_cleanup: true
  #  script:
  #    - scp -v $TRAVIS_BUILD_DIR/package/* $WOO_UID@www.opendap.org:/httpdocs/webdav/pub/olfs;
  #  on:
  #    branch: master
  #    condition: $STAGE =~ ^snappah$
       
# The after_deploy section grabs the hyrax-docker project, sets the current 
# snapshot time and pushes the result to GitHub. This push triggers TravisCI 
# to build the Docker containers for all of the Hyrax snapshot products. 
after_deploy:
    - ls -l ${TRAVIS_BUILD_DIR}/package/*
    - git clone https://github.com/opendap/hyrax-docker;
    - git config --global user.name "The-Robot-Travis"
    - git config --global user.email "npotter@opendap.org"
    - cd hyrax-docker/hyrax-snapshot;
    - date | tee -a snapshot.time;
    - git commit -am "The OLFS has produced new snapshot files. Triggering Hyrax-Docker image builds for snapshots.";
    - git status;
    - git push https://$GIT_UID:$GIT_PSWD@github.com/opendap/hyrax-docker --all 



    
