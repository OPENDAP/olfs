
# Initial Travic-CI control file. 6.11.15 jhrg
# Added sonar scan 3.12.19 jhrg 

dist: focal

# Use the docker container-based build systems
# sudo: false # deprecated. jhrg 1/19/24

language: java

services:
  - docker

# safe list
branches:
  only:
    - master
    - /^(.*-test-deploy)$/

notifications:
  email:
    - ndp@opendap.org
    - jgallagher@opendap.org

addons:
  # ssh_known_hosts: www.opendap.org
  apt:
    packages:
      - ant
      - gnupg
#      - junit

env:
  global:
    # SONAR_LOGIN, made using "travis encrypt --org -r OPENDAP/olfs SONAR_LOGIN=335df..."
    - secure: "GW672d33rdWG40v8ve25p909qnejhqWGzoX7+IEflv9hMZ+8vDWArtFaxuILhu/QeJlLJgMCrNyWdhgpSuyEJS8/EQlOUXWZfZaSPBVriayd7OKLY5D35PKODFPXbZpJ1GOheMz3roQkg+IjQzgey/zOGu4KQB9FjtcqllFvy38="
    # AWS_ACCESS_KEY_ID for the user 'travis-olfs'
    - secure: "N7FWlKcHNC4VRaNZFz/8WQlwJXjr7t4QLklJPiUY2xBw8n4lpYUuMjvDlwX7YupIKNGw8ama8GauNZhJ2h0qv08VeMF4VLOc5yUDt9BSEEnomiQZWa8N0paaSknlZP8Qq7YH2WVrlASIR+/Owdig1mqIv9GPW+ZkwdRTdRI9FZM="
    # AWS_SECRET_ACCESS_KEY
    - secure: "c70Fjj9nsL085GJlSToG6hxfuKI2uPEI4bXVggtJ7jfO6PdA1UFDq0FiqUwm14Nzi81YEjXmlF2PznieZAlzi7wh6Xa2H8xxwdx5jJCnp8wqMkNpFMk3SkdJHMCciHqMlxI1toa9JgJ/+PVPgynfBn2b0a/Ivrl0TBIkKoWoFes="
    # GIT_UID for travis-ci-opendap
    - secure: "jnuhhkxj0UlQLZSObVEi5xi0dAHObLy6S6f4hhCLKsI0nDgdL8Xj212ZubI4mlRSOgCmfbBNSSz20WgH11D7fuvPQQVyN6MMbh9OrE6JT1NEnA+Rzl+1tjWYTTBCkw1fQjchCg6fR+5Poyq4zfXOaG3H8DBZfrSGFTTdC2BdcWs="
    # GIT_PSWD for travis-ci-opendap
    - secure: "KYXSNaFsAVD5ubOsPNvDhd2rmzuyGIUh0p8s1VPEezxjTDPcA4T3FXnKVClFTUcJFFY8TJ9uqowbMyQ1D4TB1h+IiAI5FIOE48qEs2N89c4hV677vfPZiXBZKy7gnCDnqvYi6qesXSqH1GIYHJex60ouzWYGYxxwJbWEbKmpuhU="
    # WOO_UID for travis
    - secure: "jXqnDaiGjCUUAc4r865NkgbXCPfqRxrfWP+lKtAG7Lc/U6sTQBIJww1bsvfizFOdiEAgAzk4OAgE4z6djf7WbhHzyQKxGIieyLWUXoKhzAKjRYwidmKp6gBWOZSvcxURcYF2SpRAuKASpv/9lvZ3bNOlHu9LYQJ7r49AmCXJ98o="
    # SNYK_TOKEN
    - secure: "A+Ll8E9FlU0B4qAYb9GTmuCFgY0RstSXiJqTuXcEmej/ppalCvCXN4t+Ss3fyy4zF3NbNh54kVhnZOL3/bDe8VihvL48MbftCfdq4kmE3UdYqdTjs6vqGl0g1UkMqdGq/uvxPhBM0ggMM1EO9aN03OtCnEehcnKtwqKVdOGzQg4="

# before_install:
#  - echo "#######################################################"
#  - echo "Install JDK-11"
#  - curl https://raw.githubusercontent.com/sormuras/bach/releases/11/install-jdk.sh > install-jdk.sh
#  - chmod +x ./install-jdk.sh
#  - export JAVA_HOME=$HOME/openjdk11
#  - ./install-jdk.sh -F 11 --target $JAVA_HOME
#  - java -version
#  - echo "#######################################################"
before_install:
  - gem install bundler

install:
  - nvm install 12.13.0
  - npm install -g snyk
  - npm install -g snyk-gradle-plugin

stages:
  - name: build
  - name: test
  - name: scan
  - name: snappah
    if: type != pull_request OR branch =~ ^(.*-test-deploy)$
  - name: hyrax-docker-trigger
    if: type != pull_request OR branch =~ ^(.*-test-deploy)$
  - name: disabled
    if: branch = disabled

# caching for gradle
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

jobs:
  include:

    # - stage: build
    #   name: "jdk17"
    #   jdk: openjdk17
    #   script:
    #     - export STAGE=build
    #     - ant -DHYRAX_VERSION=CI-Build -DOLFS_VERSION=CI-Build show server

    # - stage: build
    #   name: "gradle (jdk17)"
    #   jdk: openjdk17
    #   script:
    #     - export STAGE=build
    #     - gradle --version
    #     - gradle tasks
    #     - gradle war

    # - stage: disabled
    #   name: "jdk11"
    #   jdk: openjdk11
    #   script:
    #     - export STAGE=test
    #     - ant show check

    # # I think doesn't work because the sonarscan/sonarqube 'ant task' s no longer supported. jhrg 1/22/24
    # - stage: disabled
    #   name: "sonarscan (jdk17)"
    #   jdk: openjdk17
    #   addons: sonarcloud
    #   script:
    #     - export STAGE=scan
    #     - export ANT_OPTS="-Xms256m -Xmx8g"
    #     - ant -DHYRAX_VERSION=CI-Build -DOLFS_VERSION=CI-Build show server
    #     - travis_wait 45 ant -Dsonar.token=$SONAR_LOGIN -Dsonar.qualitygate.timeout=2700 -Dsonar.qualitygate.wait=true show sonar
    #     - curl -s https://sonarcloud.io/api/project_badges/quality_gate?project=opendap-olfs | grep "QUALITY GATE PASS"

    # - stage: scan
    #   name: "synk (jdk17)"
    #   jdk: openjdk17
    #   script:
    #     - export STAGE=scan
    #     - echo $STAGE
    #     - ./run-snyk.sh

    - stage: scan
      name: "gradle sonarscan (jdk17)"
      jdk: openjdk17
      addons: sonarcloud
      script:
        - export STAGE=scan
        # Various edits to the build.gradle file to get this to work. jhrg 1/22/24
        # - travis_wait 30 gradle buildDists sonarqube -Dsonar.token=$SONAR_LOGIN -Dsonar.qualitygate.timeout=1800 -Dsonar.qualitygate.wait=true
        - export SONAR_BRANCH_NAME="$TRAVIS_PULL_REQUEST_BRANCH"
        - if test -z "$SONAR_BRANCH_NAME"; then export SONAR_BRANCH_NAME="$TRAVIS_BRANCH"; fi
        - travis_wait 30 gradle sonar -Dsonar.token=$SONAR_LOGIN -Dsonar.qualitygate.timeout=1800 -Dsonar.qualitygate.wait=true -Dsonar.branch.name="$SONAR_BRANCH_NAME"
        - curl -s https://sonarcloud.io/api/project_badges/quality_gate?project=opendap-olfs | grep "QUALITY GATE PASS"

#     - stage: snappah
#       name: "olfs-snapshot (jdk17)"
#       jdk: openjdk17
#       script:
#         - export STAGE=snappah
#         - echo "STAGE is ${STAGE}"
#         - test -d $TRAVIS_BUILD_DIR/package || mkdir $TRAVIS_BUILD_DIR/package
#         - source ./travis/compute_build_tags.sh
#         - ant -DHYRAX_VERSION="${HYRAX_BUILD_VERSION}" -DOLFS_VERSION="${OLFS_BUILD_VERSION}" -DOLFS_DIST_BASE=olfs-snapshot DISTRO
#         - cp ./build/dist/*.tgz $TRAVIS_BUILD_DIR/package/;
#         - echo "Built Distribution Bundles:"
#         - ls -l ./build/dist/*.tgz
#         - echo "Checking ${TRAVIS_BUILD_DIR}/package/"
#         - ls -l ${TRAVIS_BUILD_DIR}/package/

#     - stage: snappah
#       name: "olfs-build-number (jdk17)"
#       jdk: openjdk17
#       script:
#         - export STAGE=snappah
#         - echo "STAGE is ${STAGE}"
#         - test -d $TRAVIS_BUILD_DIR/package || mkdir $TRAVIS_BUILD_DIR/package
#         - source ./travis/compute_build_tags.sh
#         - ant -DHYRAX_VERSION="${HYRAX_BUILD_VERSION}" -DOLFS_VERSION="${OLFS_BUILD_VERSION}" DISTRO
#         - cp ./build/dist/*.tgz $TRAVIS_BUILD_DIR/package/;
#         - echo "Built Distribution Bundles:"
#         - ls -l ./build/dist/*.tgz
#         - echo "Checking ${TRAVIS_BUILD_DIR}/package/"
#         - ls -l ${TRAVIS_BUILD_DIR}/package/

#     - stage: snappah
#       name: "ngap-snapshot (jdk17)"
#       jdk: openjdk17
#       script:
#         - export STAGE=snappah
#         - echo "STAGE is ${STAGE}"
#         - test -d $TRAVIS_BUILD_DIR/package || mkdir $TRAVIS_BUILD_DIR/package
#         - source ./travis/compute_build_tags.sh
#         - ant -DHYRAX_VERSION="${HYRAX_BUILD_VERSION}" -DOLFS_VERSION="${OLFS_BUILD_VERSION}" -DNGAP_DIST_BASE=ngap-snapshot ngap-dist
#         - cp ./build/dist/*.tgz $TRAVIS_BUILD_DIR/package/;
#         - echo "Build Bundles:"
#         - ls -l ./build/dist/*.tgz
#         - echo "Checking ${TRAVIS_BUILD_DIR}/package/"
#         - ls -l ${TRAVIS_BUILD_DIR}/package/

#     - stage: snappah
#       name: "ngap-build-number (jdk17)"
#       jdk: openjdk17
#       script:
#         - export STAGE=snappah
#         - echo "STAGE is ${STAGE}"
#         - test -d $TRAVIS_BUILD_DIR/package || mkdir $TRAVIS_BUILD_DIR/package
#         - source ./travis/compute_build_tags.sh
#         - ant -DHYRAX_VERSION="${HYRAX_BUILD_VERSION}" -DOLFS_VERSION="${OLFS_BUILD_VERSION}" -DNGAP_DIST_BASE="ngap-${OLFS_BUILD_VERSION}" ngap-dist
#         - echo "Build Bundles:"
#         - ls -l ./build/dist/*.tgz
#         - cp ./build/dist/*.tgz $TRAVIS_BUILD_DIR/package/;
#         - echo "Checking ${TRAVIS_BUILD_DIR}/package/"
#         - ls -l ${TRAVIS_BUILD_DIR}/package/

#     # The hyrax-docker-trigger stage grabs the hyrax-docker project, sets the current
#     # snapshot time and pushes the result to GitHub. This push triggers TravisCI
#     # to build the Docker containers for all the Hyrax snapshot products.
#     # I moved this into its own stage instead of after_deploy so that it would
#     # reliably run once after everything else worked. -ndp 3/10/21
#     - stage: hyrax-docker-trigger
#       name: "Triggering hyrax-docker snapshot build"
#       script:
#         - export STAGE=hyrax-docker
#         - echo $STAGE
#         - source ./travis/compute_build_tags.sh
#         - ./travis/trigger-hyrax-docker.sh

# # The "deploy" section copies the snapshot build product to our S3 bucket
# deploy:
#   - provider: s3
#     edge: true
#     access_key_id: $AWS_ACCESS_KEY_ID
#     secret_access_key: $AWS_SECRET_ACCESS_KEY
#     bucket: opendap.travis.build
#     skip_cleanup: true
#     local_dir: $TRAVIS_BUILD_DIR/package
#     on:
#       all_branches: true
#       condition: $STAGE =~ ^snappah$
